commands:
  docker-tag:
    description: "Add a new tag to a docker image that has already been pulled"
    parameters:
      from_tag:
        type: string
        default: $CIRCLE_SHA1
      to_tag:
        type: string
        default: "main"
      image:
        type: string
    steps:
      - run: >
          docker tag <<parameters.image>>:<<parameters.from_tag>> <<parameters.image>>:<<parameters.to_tag>>

jobs:
  build-and-push:
    executor: docker/docker
    steps:
      - setup_remote_docker:
          version: 19.03.13
      - checkout
      - docker/check
      - docker/build:
          image: yalelibraryit/dc-blacklight
          cache_from: yalelibraryit/dc-blacklight:main
      - docker/push:
          image: yalelibraryit/dc-blacklight
  run-tests:
    docker:
      # Image pulled from registry
      - image: yalelibraryit/dc-blacklight:$CIRCLE_SHA1
        environment:
            POSTGRES_HOST: localhost
            POSTGRES_DB: blacklight_yul_test
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
            SOLR_CORE: blacklight-test
            SOLR_TEST_URL: http://localhost:8983/solr/blacklight-test
      - image: yalelibraryit/dc-solr:v1.0.9
        environment:
          SOLR_HEAP: 4G
        entrypoint: bash -c '/opt/docker-solr/scripts/precreate-core blacklight-test /opt/config; chown -R solr:solr /var/solr/data/ ; /boot.sh'
      - image: circleci/postgres:9.5-alpine-ram
        environment:
            POSTGRES_DB: blacklight_yul_test
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
    parallelism: 4 
    executor: docker/docker
    steps:
      - setup_remote_docker
      - run:
          name: Rubocop
          command: |
            cd /home/app/webapp && bundle exec rubocop --parallel
      - run:
          name: rspec
          # Excludes tests that require Yale VPN access
          command: |
            mkdir /tmp/test-results
            cd /home/app/webapp && bundle exec rspec $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
       - run:
          name: Stash Coverage Results
          command: |
            mkdir coverage_results
            cp -R /home/app/webapp/coverage/.resultset.json coverage_results/.resultset-${CIRCLE_NODE_INDEX}.json
      - persist_to_workspace:
          root: .
          paths:
            - coverage_results
  coverage:
    docker:
      - image: yalelibraryit/dc-management:$CIRCLE_SHA1
    executor: docker/docker
    steps:
      - setup_remote_docker
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /home/app/webapp
      - run:
          name: Bundle Install
          command: cd /home/app/webapp && bundle check || bundle install
      - run:
          name: Merge and check coverage
          command: |
            cd /home/app/webapp && bundle exec rake coverage:report
      - store_artifacts:
          path: /home/app/webapp/coverage
  publish-latest:
    # Testing fix in publish latest (it will run automatically)
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout # New step added to github-release workflow (to remedy no such file)
      - docker/check
      - docker/pull:
          images: yalelibraryit/dc-blacklight:$CIRCLE_SHA1
            # Dockerhub tags allow alphanumeric characters, periods, underscores, and hyphens.
      # This run step makes CLEAN_BRANCH, the branch name with all forbidden characters removed,
      # available to subsequent steps.
      - run: |
          echo "export CLEAN_BRANCH=`echo $CIRCLE_BRANCH |sed 's#[^[:alnum:]._-]##g'`" >> $BASH_ENV
      - docker-tag:
          image: yalelibraryit/dc-blacklight
          from_tag: $CIRCLE_SHA1
          to_tag: $CLEAN_BRANCH
      - docker/push:
          image: yalelibraryit/dc-blacklight
          tag: $CLEAN_BRANCH
      # Test running script and pulling image
      - run: |
          ./bin/wait-for-docker-image yalelibraryit/dc-blacklight $CIRCLE_SHA1
      - docker/pull:
          images: yalelibraryit/dc-blacklight:$CIRCLE_SHA1
  publish-github-release:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - run: |
          ./bin/wait-for-docker-image yalelibraryit/dc-blacklight $CIRCLE_SHA1
      - docker/pull:
          images: yalelibraryit/dc-blacklight:$CIRCLE_SHA1
      - docker-tag:
          image: yalelibraryit/dc-blacklight
          from_tag: $CIRCLE_SHA1
          to_tag: $CIRCLE_TAG
      - docker/push:
          image: yalelibraryit/dc-blacklight
          tag: $CIRCLE_TAG

orbs:
  docker: circleci/docker@1.0.1
version: 2.1
workflows:
  commit:
    jobs:
      - build-and-push:
          context: yul-dc
      - run-tests:
          requires:
            - build-and-push
      - coverage:
          requires:
            - run-tests
      - publish-latest:
          context: yul-dc
          requires:
            - build-and-push
            - run-tests
      - publish-github-release:
          context: yul-dc
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
