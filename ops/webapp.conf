# Enable X-Forwarded-For
log_format  main  '$http_x_forwarded_for - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent"';

passenger_log_file /dev/stdout;

## Extend timeouts to account for proxy delays
# TODO this may not be needed for our setup
client_body_timeout       1m;
client_header_timeout     1m;
# keepalive_timeout         5m;
send_timeout              5m;

server {
    error_log /dev/stdout;
    access_log /dev/stdout;
    listen 3000;
    server_name _;
    root /home/app/webapp/public;
    client_body_in_file_only clean;
    client_body_buffer_size 32K;

    client_max_body_size 0;

    sendfile on;
    send_timeout 300s;
    # The following deploys your Ruby/Python/Node.js/Meteor app on Passenger.
    passenger_enabled on;
    passenger_user app;

    # If this is a Ruby app, specify a Ruby version:
    # For Ruby 2.6
    passenger_ruby /usr/bin/ruby2.6;

    ## Location or path of limited access media
    location ^~  /iiif {
        auth_request     /auth;
        auth_request_set $auth_status $upstream_status;

        proxy_set_header       X-Real-IP        $remote_addr;
        proxy_set_header       X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header       X-Forwarded-Proto @@image_internal_proto_override@@;
        proxy_set_header       X-Forwarded-Host $host;
        proxy_set_header       X-Forwarded-Port @@image_internal_port_override@@;
        proxy_set_header       X-Forwarded-Path /;
        proxy_pass @@image_internal_url@@;
    }
    location = /auth {
        proxy_pass http://127.0.0.1:3000/check-iiif;	# authentication server
        proxy_pass_request_body off;				# no data is being transferred...
        proxy_set_header Content-Length '0';
        proxy_set_header Host $host;				# Custom headers with authentication related data
        proxy_set_header X-Origin-URI $request_uri;
        proxy_set_header X-Forwarded-Host $host;
    }
}
